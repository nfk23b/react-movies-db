{"version":3,"sources":["assets/jay_and_silent_bob_reboot_canadian_movie_poster.jpg","actions/index.js","components/moviesdb-service-context/moviesdb-service-context.js","components/hoc/with-moviesdb-service.js","utils/compose.js","components/header/header.js","components/header/index.js","components/movies-list/index.js","components/movies-list/movies-list.js","components/movie-info/movie-info.js","components/movie-info/index.js","components/movies-container/movies-container.js","components/movies-container/index.js","components/body/body.js","components/body/index.js","components/footer/footer.js","components/footer/index.js","components/app/index.js","components/app/app.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","reducers/movies-list.js","reducers/movie-info.js","reducers/index.js","store.js","index.js","services/movies-db-service.js"],"names":["module","exports","fetchMovies","moviesDbService","title","dispatch","type","getMovies","then","data","payload","catch","err","fetchMovieInfo","id","getMovieInfo","React","createContext","MoviesDbServiceProvider","Provider","MoviesDbServiceConsumer","Consumer","withMoviesDbService","Wrapped","props","compose","funcs","comp","reduceRight","wrapped","f","useStyles","makeStyles","theme","root","backgroundColor","palette","secondary","main","flexGrow","titleLink","color","common","white","textDecoration","marginRight","spacing","menuButton","header","boxShadow","search","position","borderRadius","shape","fade","marginLeft","width","breakpoints","up","searchIcon","height","pointerEvents","display","alignItems","justifyContent","inputRoot","inputInput","padding","transition","transitions","create","Header","withWidth","connect","moviesList","movies","bindActionCreators","classes","useState","anchorEl","history","Boolean","useHistory","className","AppBar","Toolbar","Typography","variant","to","isWidthUp","InputBase","placeholder","input","onKeyPress","e","query","target","value","key","length","push","inputProps","MoviesList","withStyles","icon","skeletonContainer","flexWrap","margin","showMoreBtn","loading","Box","Array","map","x","i","Skeleton","isWidthDown","GridList","cellHeight","cols","tile","GridListTile","src","image","alt","GridListTileBar","subtitle","year","actionIcon","IconButton","aria-label","MoviesInfo","renderRatings","ratings","rating","Source","Value","this","match","params","movie","Poster","rest","movieData","Object","entries","back","backArrow","skeletonList","skeletonPoster","details","List","component","list","filter","ListItem","listItem","listItemType","listItemValue","poster","Component","MovieInfo","fontSize","cursor","paddingRight","down","order","paddingLeft","paddingTop","paddingBottom","borderBottom","fontWeight","marginTop","flexDirection","marginBottom","movieInfo","ownProps","MoviesContainer","box","path","exact","grid","overflow","background","paper","primary","heading","Body","Footer","App","createMuiTheme","values","xs","sm","xmd","md","lg","xl","ThemeProvider","Container","ErrorIndicator","ErrorBoundry","state","hasError","setState","children","updateMoviesList","action","undefined","author","total","error","reducer","store","createStore","applyMiddleware","thunkMiddleware","_apiBase","_detailedInfoApi","getResource","a","api","fetch","method","headers","res","ok","Error","status","json","_transformMovie","totalResults","Search","Title","Year","imdbID","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f85b3728.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/jay_and_silent_bob_reboot_canadian_movie_poster.2ee1c9c8.jpg\";","const moviesLoaded = (newMovies) => {\r\n    return {\r\n        type: 'FETCH_MOVIES_SUCCESS',\r\n        payload: newMovies\r\n    };\r\n};\r\n\r\nconst moviesRequested = () => {\r\n    return {\r\n        type: 'FETCH_MOVIES_REQUEST'\r\n    }\r\n}\r\n\r\nconst moviesError = (error) => {\r\n    return {\r\n        type: 'FETCH_MOVIES_FAILURE',\r\n        payload: error\r\n    }\r\n}\r\n\r\nconst movieInfoLoaded = (newMovies) => {\r\n    return {\r\n        type: 'FETCH_MOVIE_INFO_SUCCESS',\r\n        payload: newMovies\r\n    };\r\n};\r\n\r\nconst movieInfoRequested = () => {\r\n    return {\r\n        type: 'FETCH_MOVIE_INFO_REQUEST'\r\n    }\r\n}\r\n\r\nconst movieInfoError = (error) => {\r\n    return {\r\n        type: 'FETCH_MOVIE_INFO_FAILURE',\r\n        payload: error\r\n    }\r\n}\r\n\r\nconst fetchMovies = (moviesDbService) => (title) => (dispatch) => {\r\n    dispatch(moviesRequested());\r\n    moviesDbService.getMovies(title)\r\n    .then((data) => dispatch(moviesLoaded(data)))\r\n    .catch((err) => dispatch(moviesError(err)));\r\n};\r\n\r\nconst fetchMovieInfo = (moviesDbService) => (title, id) => (dispatch) => {\r\n    dispatch(movieInfoRequested());\r\n    moviesDbService.getMovieInfo(title, id)\r\n    .then((data) => dispatch(movieInfoLoaded(data)))\r\n    .catch((err) => dispatch(movieInfoError(err)));\r\n};\r\n\r\nexport {\r\n    fetchMovies,\r\n    fetchMovieInfo\r\n};","import React from \"react\";\r\n\r\nconst {\r\n    Provider: MoviesDbServiceProvider,\r\n    Consumer: MoviesDbServiceConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n    MoviesDbServiceProvider,\r\n    MoviesDbServiceConsumer\r\n}","import React from \"react\";\r\nimport { MoviesDbServiceConsumer } from '../moviesdb-service-context';\r\n\r\nconst withMoviesDbService = () => (Wrapped) => {\r\n    return (props) => {\r\n        return (\r\n            <MoviesDbServiceConsumer>\r\n                {\r\n                    (moviesDbService) => {\r\n                        return (\r\n                            <Wrapped {...props} moviesDbService={moviesDbService} />\r\n                        )\r\n                    }\r\n                }\r\n            </MoviesDbServiceConsumer>\r\n        )\r\n    }\r\n};\r\n\r\nexport default withMoviesDbService;","const compose = (...funcs) => (comp) => {\r\n    return funcs.reduceRight(\r\n      (wrapped, f) => f(wrapped), comp);\r\n  };\r\n  \r\nexport default compose;","import React from 'react';\r\nimport { fetchMovies } from '../../actions';\r\nimport { connect } from 'react-redux';\r\nimport { withMoviesDbService } from '../hoc';\r\nimport { compose } from '../../utils';\r\nimport { bindActionCreators } from 'redux';\r\nimport { Toolbar, Typography, IconButton, AppBar, makeStyles, fade, InputBase, Menu, MenuItem } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport withWidth, { isWidthDown, isWidthUp } from '@material-ui/core/withWidth';\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nimport './header.scss';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: theme.palette.secondary.main\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    titleLink: {\r\n        color: theme.palette.common.white,\r\n        textDecoration: 'none',\r\n        marginRight: theme.spacing(3)\r\n    },\r\n    menuButton: {\r\n        color: theme.palette.common.white,\r\n    },\r\n    header: {\r\n        boxShadow: 'none'\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n          backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginLeft: 0,\r\n        marginRight: theme.spacing(1),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n          marginLeft: theme.spacing(1),\r\n          width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        width: theme.spacing(7),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 7),\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n          width: 120,\r\n          '&:focus': {\r\n            width: 200,\r\n          },\r\n        },\r\n      },\r\n}));\r\n\r\nconst Header = (props) => {\r\n    const classes = useStyles();\r\n    const [auth, setAuth] = React.useState(true);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n  \r\n    const handleMenu = event => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    let history = useHistory();\r\n\r\n    const inputChange = (e) => {\r\n        let query = e.target.value;\r\n        \r\n        if (e.key === \"Enter\" && query.length >= 3) {\r\n            history.push('/');\r\n            props.fetchMovies(query);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" color=\"secondary\" className={classes.header}>\r\n                <Toolbar>\r\n                    \r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        <Link to=\"/\" className={classes.titleLink}>\r\n                            {isWidthUp('sm', props.width) ? 'React Movies DB' : 'RMDB'}\r\n                        </Link>\r\n                    </Typography>\r\n                    <div className={classes.search}>\r\n                        <div className={classes.searchIcon}>\r\n                        <SearchIcon />\r\n                        </div>\r\n                        <InputBase\r\n                        placeholder=\"Search…\"\r\n                        classes={{\r\n                            root: classes.inputRoot,\r\n                            input: classes.inputInput,\r\n                        }}\r\n                        onKeyPress={inputChange}\r\n                        inputProps={{ 'aria-label': 'search' }}\r\n                        />\r\n                    </div>\r\n                    {/* {auth && (\r\n                        <div>\r\n                        <IconButton\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls=\"menu-appbar\"\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleMenu}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <AccountCircle />\r\n                        </IconButton>\r\n                        <Menu\r\n                            id=\"menu-appbar\"\r\n                            anchorEl={anchorEl}\r\n                            anchorOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right',\r\n                            }}\r\n                            keepMounted\r\n                            transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right',\r\n                            }}\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                        >\r\n                            <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                            <MenuItem onClick={handleClose}>My account</MenuItem>\r\n                        </Menu>\r\n                        </div>\r\n                    )} */}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = ({  moviesList: { movies = []  } }) => {\r\n    return { movies }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { moviesDbService }) => {\r\n    return bindActionCreators({\r\n        fetchMovies: fetchMovies(moviesDbService)\r\n    }, dispatch)\r\n};\r\n\r\nexport default compose(\r\n    withWidth(),\r\n    withMoviesDbService(),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(Header);\r\n","import Header from './header';\r\n\r\nexport default Header;","import MoviesList from './movies-list';\r\n\r\nexport default MoviesList;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withMoviesDbService } from \"../hoc\";\r\nimport { compose } from \"../../utils\";\r\nimport {\r\n    Button,\r\n    Box,\r\n    GridList,\r\n    GridListTile,\r\n    GridListTileBar,\r\n    IconButton\r\n} from \"@material-ui/core\";\r\nimport { Link } from 'react-router-dom'\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport withWidth, { isWidthDown } from '@material-ui/core/withWidth';\r\n\r\nconst styles = () => ({\r\n    icon: {\r\n        color: \"rgba(255, 255, 255, 0.54)\"\r\n    },\r\n    skeletonContainer: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        margin: '0 -5px 0',\r\n        '& span' : {\r\n            margin: '10px 5px 0',\r\n        }\r\n    },\r\n    showMoreBtn: {\r\n        display: 'block',\r\n        margin: '10px auto'\r\n    }\r\n});\r\n\r\n// const showMore = (e) => {\r\n//     console.log('test');\r\n// }\r\n\r\nconst MoviesList = ({ movies, loading, classes, width }) => {\r\n    \r\n    const getSkeletonColsWidth = () => {\r\n        if (isWidthDown('xs', width)) {\r\n            return '100%';\r\n        } else if (isWidthDown('sm', width)) {\r\n            return 'calc(50% - 10px)';\r\n        } else if (isWidthDown('md', width)) {\r\n            return 'calc(20% - 10px)';\r\n        } else if (isWidthDown('lg', width)) {\r\n            return 'calc(20% - 10px)';\r\n        } else if (isWidthDown('xl', width)) {\r\n            return 'calc(20% - 10px)';\r\n        }\r\n      }\r\n\r\n    const getGridListCols = () => {\r\n        if (isWidthDown('xs', width)) {\r\n            return 1;\r\n        } else if (isWidthDown('sm', width)) {\r\n            return 2;\r\n        } else if (isWidthDown('md', width)) {\r\n            return 5;\r\n        } else if (isWidthDown('lg', width)) {\r\n            return 5;\r\n        } else if (isWidthDown('xl', width)) {\r\n            return 5;\r\n        }\r\n      }\r\n    \r\n        return (\r\n            <Box>\r\n                {!loading ? \r\n                <GridList\r\n                    cellHeight={180}\r\n                    cols={getGridListCols()}\r\n                    spacing={10}\r\n                >\r\n                    {movies.map(tile => (\r\n                        <GridListTile\r\n                            key={tile.id}\r\n                        >\r\n                            <img src={tile.image} alt={tile.title} />\r\n                            <Link to={`/movie/${tile.id}`}>\r\n                                <GridListTileBar\r\n                                    title={tile.title}\r\n                                    subtitle={<span>year: {tile.year}</span>}\r\n                                    actionIcon={\r\n                                        <IconButton\r\n                                            aria-label={`info about ${tile.title}`}\r\n                                            className={classes.icon}\r\n                                        >\r\n                                            <InfoIcon />\r\n                                        </IconButton>\r\n                                    }\r\n                                />\r\n                            </Link>\r\n                        </GridListTile>\r\n                    ))}\r\n                </GridList>\r\n                : \r\n                <Box  className={classes.skeletonContainer}>\r\n                    {[...Array(10)].map((x, i) =>\r\n                        <Skeleton variant=\"rect\" height={180} width={getSkeletonColsWidth()} key={i}/>\r\n                    )}\r\n                </Box>\r\n                }\r\n                {/* {!loading && movies.length && movies[0].total > 10 ?\r\n                    <Button variant=\"contained\" color=\"secondary\" className={classes.showMoreBtn} onClick={showMore}>\r\n                        Show more\r\n                    </Button>\r\n                : null} */}\r\n            </Box>\r\n        );\r\n}\r\n\r\nconst mapStateToProps = ({\r\n    moviesList: { loading, movies },\r\n}) => {\r\n    return { loading, movies };\r\n};\r\n\r\nexport default compose(\r\n    withWidth(),\r\n    withStyles(styles),\r\n    withMoviesDbService(),\r\n    connect(mapStateToProps)\r\n)(MoviesList);\r\n","import React, { Component } from 'react';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { connect } from 'react-redux';\r\nimport { withMoviesDbService } from '../hoc';\r\nimport { fetchMovieInfo } from \"../../actions\";\r\nimport { compose } from '../../utils';\r\nimport { bindActionCreators } from 'redux';\r\nimport { Box, Typography, List, ListItem } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { Link } from 'react-router-dom'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n    back: {\r\n        color: theme.palette.common.white,\r\n        fontSize: '1.1rem',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        cursor: 'pointer',\r\n        textDecoration: 'none'\r\n    },\r\n    backArrow: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    list: {\r\n        color: theme.palette.common.white,\r\n        paddingRight: theme.spacing(10),\r\n        width: '69%',\r\n        [theme.breakpoints.down('sm')]: {\r\n            order: 1,\r\n            width: '100%'\r\n        },\r\n    },\r\n    listItem: {\r\n        paddingLeft: 0,\r\n        paddingTop: theme.spacing(0.5),\r\n        paddingBottom: theme.spacing(0.5),\r\n        alignItems: 'flex-start',\r\n        borderBottom: `1px solid ${theme.palette.common.white}`\r\n    },\r\n    listItemType: {\r\n        width: theme.spacing(14),\r\n        fontWeight: 'bold',\r\n        display: 'table'\r\n    },\r\n    listItemValue: {\r\n        paddingLeft: 0,\r\n        '& p': {\r\n            margin: 0\r\n        }\r\n    },\r\n    details: {\r\n        display: 'flex',\r\n        marginTop: theme.spacing(3),\r\n        justifyContent: 'space-between',\r\n        [theme.breakpoints.down('sm')]: {\r\n            flexDirection: 'column',\r\n        },\r\n    },\r\n    poster: {\r\n        marginTop: theme.spacing(5),\r\n        [theme.breakpoints.down('sm')]: {\r\n            order: 0,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n            marginBottom: theme.spacing(3),\r\n        },\r\n    },\r\n    skeletonContainer: {\r\n        marginTop: theme.spacing(5),\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        [theme.breakpoints.down('sm')]: {\r\n            flexDirection: 'column',\r\n        },\r\n    },\r\n    skeletonList: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            order: 1,\r\n            width: '100% !important'\r\n        },\r\n    },\r\n    skeletonPoster: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            order: 0,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n            marginBottom: theme.spacing(3),\r\n        },\r\n    }\r\n});\r\n\r\nclass MoviesInfo extends Component {\r\n    renderRatings = ratings => ratings.map(rating => (\r\n        <p key={rating.Source}>{rating.Source}: {rating.Value}</p>\r\n    ));\r\n\r\n    componentDidMount() {\r\n        const {match: { params: { id } }} = this.props;\r\n        this.props.fetchMovieInfo(id);\r\n    }\r\n\r\n    render() {\r\n        const { movie: { Poster, ...rest }, classes, loading } = this.props;\r\n        const movieData = Object.entries(rest);\r\n        \r\n        return (\r\n            <Box >\r\n                <Typography >\r\n                    <Link to=\"/\" className={classes.back}>\r\n                        <ArrowBackIcon className={classes.backArrow} />\r\n                        Go back\r\n                    </Link>\r\n                </Typography>\r\n                {!loading ?\r\n                    <Box className={classes.details}>\r\n                    <List component=\"ul\" className={classes.list}>\r\n                        {movieData\r\n                        .filter(data => (data[0] !== 'Response' && data[1] !== 'N/A'))\r\n                        .map(data => (\r\n                            <ListItem key={data[0]} className={classes.listItem}>\r\n                                <Typography className={classes.listItemType} >{data[0]}:</Typography>\r\n                                <Typography component=\"div\" className={classes.listItemValue} >{data[0] !== 'Ratings' ? data[1] :  this.renderRatings(data[1])}</Typography>\r\n                            </ListItem>\r\n                        ))\r\n                        }\r\n                    </List>\r\n                    <Box className={classes.poster}>\r\n                        <img src={Poster} alt=\"Poster\" />\r\n                    </Box>\r\n                </Box>\r\n                :\r\n                <Box className={classes.skeletonContainer}>\r\n                    <Skeleton variant=\"rect\" height={500} width={850} className={classes.skeletonList} />\r\n                    <Skeleton variant=\"rect\" height={500} width={300} className={classes.skeletonPoster} />\r\n                </Box>\r\n            }\r\n                \r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n    movieInfo: { movie, loading, ownProps }\r\n}) => {\r\n    return { movie, loading, ownProps };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { moviesDbService }) => {\r\n    return bindActionCreators(\r\n        {\r\n            fetchMovieInfo: fetchMovieInfo(moviesDbService)\r\n        },\r\n        dispatch\r\n    );\r\n};\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    withMoviesDbService(),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(MoviesInfo);\r\n","import MovieInfo from './movie-info';\r\n\r\nexport default MovieInfo;","import React, { Component } from \"react\";\r\nimport MoviesList from \"../movies-list\";\r\nimport MovieInfo from \"../movie-info\";\r\nimport { compose } from \"../../utils\";\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport { Box } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\n\r\nconst styles = theme => ({\r\n    grid: {\r\n        backgroundColor: theme.palette.secondary.main\r\n    },\r\n    box: {\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(5)\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        justifyContent: \"space-around\",\r\n        overflow: \"hidden\",\r\n        backgroundColor: theme.palette.background.paper\r\n    },\r\n    icon: {\r\n        color: \"rgba(255, 255, 255, 0.54)\"\r\n    }\r\n});\r\n\r\nclass MoviesContainer extends Component {\r\n    \r\n    render() {\r\n        const {\r\n            classes\r\n        } = this.props;\r\n\r\n        return (\r\n            <Box className={classes.box}>\r\n                <Switch>\r\n                    <Route \r\n                        path=\"/\"\r\n                        component={MoviesList}\r\n                        exact/>\r\n                        \r\n                    <Route \r\n                        path={`/movie/:id`}\r\n                        component={MovieInfo}/>\r\n                </Switch>\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n)(MoviesContainer);\r\n","import MoviesContainer from './movies-container';\r\n\r\nexport default MoviesContainer;","import React from \"react\";\r\nimport { Typography, Box, makeStyles } from \"@material-ui/core\";\r\nimport MoviesContainer from \"../movies-container\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    box: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        flexGrow: 1\r\n    },\r\n    heading: {\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2),\r\n        color: theme.palette.common.white\r\n    }\r\n}));\r\n\r\nconst Body = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Box className={classes.box}>\r\n            <Typography variant=\"h4\" className={classes.heading}>\r\n                Welcome to React Movies DB\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\" className={classes.heading}>\r\n                Use search input on top to find any movies you want\r\n            </Typography>\r\n\r\n            <MoviesContainer />\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Body;\r\n","import Body from './body';\r\n\r\nexport default Body;","import React from 'react';\r\n\r\nimport { Box, Typography, makeStyles, } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.secondary.main,\r\n        color: theme.palette.common.white,\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2),\r\n        paddingLeft: theme.spacing(3),\r\n        paddingRight: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nconst Footer = () => {\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <Box className={classes.root} color=\"secondary\">\r\n            <Typography >\r\n                nfk23b@gmail.com\r\n            </Typography>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import Footer from './footer'\r\n\r\nexport default Footer;","import App from './app';\r\n\r\nexport default App;","import React from 'react';\r\nimport Header from '../header';\r\nimport Body from '../body';\r\nimport Footer from '../footer';\r\nimport { Container } from '@material-ui/core';\r\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport 'normalize.css/normalize.css';\r\nimport './app.scss';\r\n\r\n\r\nconst App = () => {\r\n    const theme = createMuiTheme({\r\n        palette: {\r\n            primary: {\r\n                main: '#4c5c96'\r\n            },\r\n            secondary: {\r\n                main: '#2e3141'\r\n            },\r\n        },\r\n        breakpoints: {\r\n            values: {\r\n                xs: 0,\r\n                sm: 480,\r\n                xmd: 768,\r\n                md: 960,\r\n                lg: 1280,\r\n                xl: 1920,\r\n            }\r\n        }\r\n    });\r\n    \r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Container >\r\n                <Header />\r\n                <Body />\r\n                <Footer />\r\n            </Container>\r\n        </ThemeProvider>\r\n    )\r\n};\r\n\r\nexport default App;\r\n","import ErrorIndicator from './error-indicator';\r\n\r\nexport default ErrorIndicator;","import React from 'react';\r\nimport './error-indicator.css';\r\n\r\nconst ErrorIndicator = () => {\r\n    return <div>Error</div>\r\n};\r\n\r\nexport default ErrorIndicator;\r\n","import ErrorBoundry from './error-boundry';\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nexport default class ErrorBoundry extends Component {\r\n    \r\n    state = {\r\n        hasError: false\r\n    };\r\n\r\n    componentDidCatch() {\r\n        this.setState({ hasError: true });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <ErrorIndicator />\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}","import image from '../assets/jay_and_silent_bob_reboot_canadian_movie_poster.jpg';\r\n\r\nconst updateMoviesList = (state, action) => {\r\n\r\n    if (state === undefined) {\r\n        return {\r\n            movies: [\r\n                {\r\n                    id: 'tt6521876',\r\n                    image: image,\r\n                    title: 'Jay and Silet Bob',\r\n                    author: 'Kevin Smith',\r\n                    year: 2019,\r\n                    total: 1\r\n                }\r\n            ],\r\n            loading: false,\r\n            error: null,\r\n        }\r\n    }\r\n\r\n    switch (action.type) {\r\n        case 'FETCH_MOVIES_REQUEST':\r\n            return {\r\n                movies: [],\r\n                loading: true,\r\n                error: null\r\n            };\r\n\r\n        case 'FETCH_MOVIES_SUCCESS':\r\n            return {\r\n                movies: action.payload,\r\n                loading: false,\r\n                error: null\r\n            };\r\n\r\n        case 'FETCH_MOVIES_FAILURE':\r\n            return {\r\n                movies: [],\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n\r\n        default:\r\n            return state.moviesList;\r\n    }\r\n};\r\n\r\nexport default updateMoviesList;","const getMovieInfo = (state, action) => {\r\n    \r\n    if (state === undefined) {\r\n        return {\r\n            movie: {},\r\n            loading: true,\r\n            error: null,\r\n        }\r\n    }\r\n    switch (action.type) {\r\n        case 'FETCH_MOVIE_INFO_REQUEST':\r\n            return {\r\n                movie: {},\r\n                loading: true,\r\n                error: null\r\n            };\r\n\r\n        case 'FETCH_MOVIE_INFO_SUCCESS':\r\n            return {\r\n                movie: action.payload,\r\n                loading: false,\r\n                error: null\r\n            };\r\n\r\n        case 'FETCH_MOVIE_INFO_FAILURE':\r\n            return {\r\n                movie: {},\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        \r\n        default:\r\n            return state.movieInfo;\r\n    }\r\n};\r\n\r\nexport default getMovieInfo;","import updateMoviesList from './movies-list';\r\nimport getMovieInfo from './movie-info';\r\n\r\nconst reducer = (state, action) => {\r\n    return {\r\n        moviesList: updateMoviesList(state, action),\r\n        movieInfo: getMovieInfo(state, action)\r\n    }\r\n};\r\n\r\nexport default reducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from './components/app';\nimport ErrorBoundry from './components/error-boundry';\nimport MoviesDbService from './services/movies-db-service';\nimport { MoviesDbServiceProvider } from './components/moviesdb-service-context';\n\nimport store from './store';\n\nconst moviesDbService = new MoviesDbService();\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <ErrorBoundry>\n            <MoviesDbServiceProvider value={moviesDbService}>\n                <Router>\n                    <App />\n                </Router>\n            </MoviesDbServiceProvider>\n        </ErrorBoundry>\n    </Provider>\n, document.getElementById('root'));\n","export default class MoviesDbService {\r\n    _apiBase =\r\n        \"https://movie-database-imdb-alternative.p.rapidapi.com/?r=json&s=\";\r\n    _detailedInfoApi =\r\n        \"https://movie-database-imdb-alternative.p.rapidapi.com/?i=\";\r\n    \r\n    getResource = async (title, id) => {\r\n        let api = `${this._apiBase}${title}`;\r\n\r\n        if (id) {\r\n            api = `${this._detailedInfoApi}${id}`;\r\n        }\r\n\r\n        const res = await fetch(api, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"x-rapidapi-host\":\r\n                    \"movie-database-imdb-alternative.p.rapidapi.com\",\r\n                \"x-rapidapi-key\":\r\n                    \"8a58ba9449mshb045f2dacddf717p1b29aejsn12b160b63b11\"\r\n            }\r\n        });\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could't fetch ${title}, recieved ${res.status}`);\r\n        }\r\n\r\n        return await res.json();\r\n    };\r\n\r\n    getMovies = async title => {\r\n        const movies = await this.getResource(title);\r\n        return this._transformMovie(movies);\r\n    };\r\n\r\n    getMovieInfo = async (id) => {\r\n        return await this.getResource(null, id);\r\n    };\r\n\r\n    _transformMovie = movies => {\r\n        const data = movies.totalResults;\r\n\r\n        return movies.Search.map(({ Title, Year, imdbID, Poster }) => ({\r\n            title: Title,\r\n            year: Year,\r\n            id: imdbID,\r\n            image: Poster,\r\n            total: data\r\n        }));\r\n    };\r\n}\r\n"],"sourceRoot":""}